scheme: http
hostname: localhost
reverse-proxy-port: ${GATEWAY_PORT}
reverse-proxy-uri: ${scheme}://${hostname}:${reverse-proxy-port}
authorization-server-prefix: ${KC_HTTP_RELATIVE_PATH}
issuer: ${reverse-proxy-uri}${authorization-server-prefix}/realms/kine
client-id: ${KC_CLIENT_ID}
client-secret: ${KC_CLIENT_SECRET}
username-claim-json-path: $.preferred_username
authorities-json-path: $.realm_access.roles
bff-port: ${BFF_PORT}
bff-prefix: /bff
resource-server-port: ${FOOD_SERVICE_PORT}
audience:
server:
  port: ${bff-port}

spring:
  application:
    name: ${BFF_SERVICE_NAME}
  port: ${BFF_PoRT}
  cloud:
    gateway:
      routes:
        - id: bff
          uri: ${scheme}://${hostname}:${resource-server-port}
          predicates:
            - Path=/api/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
            - StripPrefix=1
  security:
    oauth2:
      client:
        provider:
          kine:
            issuer-uri: ${issuer}
        registration:
          kine:
            provider: kine
            authorization-grant-type: authorization_code
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope: openid,profile,email,offline_access

eureka:
  client:
    region: default
    registryFetchIntervalSeconds: 5

com:
  c4-soft:
    springaddons:
      oidc:
        # Trusted OpenID Providers configuration (with authorities mapping)
        ops:
          - iss: ${issuer}
            authorities:
              - path: ${authorities-json-path}
            aud: ${audience}
        # SecurityFilterChain with oauth2Login() (sessions and CSRF protection enabled)
        client:
          client-uri: ${reverse-proxy-uri}${bff-prefix}
          security-matchers:
            - /api/**
            - /login/**
            - /oauth2/**
            - /logout
          permit-all:
            - /api/**
            - /login/**
            - /oauth2/**
          csrf: cookie-accessible-from-js
          oauth2-redirections:
            rp-initiated-logout: ACCEPTED
        # SecurityFilterChain with oauth2ResourceServer() (sessions and CSRF protection disabled)
        resourceserver:
          permit-all:
            - /login-options
            - /error
            - /actuator/health/readiness
            - /actuator/health/liveness